import Head from 'next/head'
import { useRouter } from 'next/router'
import { useContext, useEffect, useState } from 'react'
import Button from '../src/Components/Button'
import { AuthContext } from '../src/Components/Context'
import OrderCard from '../src/Components/OrderCard'
import { orders } from '../src/Firebase/products'

export default function Index() {

  const [tab, setTab] = useState("New")
  const { user } = useContext(AuthContext)

  const router = useRouter()

  const handleTab = () => {
    switch (tab) {
      case "New":
        return (
          <>
            {
              orders.map((order, index) => (
                <OrderCard detail={order} key={`${index} ${order?.product_id}`} />
              ))
            }
          </>
        )
      case "reservation":
      case "completed":
      case "cancelled":
        return (
          <>
            {
              orders.filter((order) => order?.status?.[tab] ).map((order, index) => (
                <OrderCard detail={order} key={`${index} ${order.name}`} />
              ))
            }
          </>
        )
      default:
        break;
    }
  }

  useEffect(() => {
    if (user === null) {
      router.push('/')
    }
  }, [])


  return (
    <div className='' >
      <Head>
        <title>Dashboard | Orders</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className='w-full pt-14 flex flex-col gap-5 justify-center items-center' >
        <div className='w-full h-fit flex items-center justify-center sticky top-14 z-20 bg-white' >
          <button
            className={`tab__btn ${tab === "New" ? "tetiary__btn" : null} `}
            onClick={() => setTab("New")}
          >
            New
          </button>
          <button
            className={`tab__btn ${tab === "reservation" ? "tetiary__btn" : null} `}
            onClick={() => setTab("reservation")}>
            Reservation
          </button>
          {/* <Button
            style={`tab__btn ${tab === "Completed" ? "primary__btn" : null} `}
            click={() => setTab("Completed")}>
            Completed
          </Button> */}
          <button
            className={`tab__btn ${tab === "cancelled" ? "tetiary__btn" : null} `}
            onClick={() => setTab("cancelled")}>
            Cancelled
          </button>
        </div>
        <div className="w-full h-fit grid grid-cols-1 md:grid-cols-3 gap-3 p-5" >
          {handleTab()}
        </div>
      </main>
    </div>
  )
}

